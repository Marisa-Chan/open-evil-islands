Замечания
====================

   * Здесь будут общие замечания, связанные с игрой, которые пока сложно
     структурировать. Например, часто используемые техники, которые
     бессмысленно комментировать в коде.

   * Порядок байтов.
     ПЗ были разработаны для платформы x86. Не была запланирована возможность
     запуска на других платформах. Все ресурсы были так же созданы на x86
     и сохранены "как есть".

     Отсюда вытекает важное следствие - ресурсы ПЗ в формате little-endian.
     Порт игры запланирован для запуска на других платформах, поэтому после
     чтения любых ресурсов данные конвертируются в формат текущей платформы.
     В заголовке cebyteorder.h имеется ряд функций для конвертации.

     Формат имён функций: (fmt)2(fmt)(size)[s] где:
        fmt - порядок байтов:
           cpu - текущей платформы;
           be - big-endian;
           le - little-endian.
        size - количество бит, с которыми работает функция (16, 32 или 64);
        s - версии функций для перестановки байт без лишнего копирования.

     Пример:
        uint32_t signature;
        ...
        le2cpu32s(&signature);

     Мы уверены в том, что переменная в формате le и переводим её в порядок
     байтов текущей машины (причём совершенно неинтересно какой он).
     В коде игры это одна из наиболее часто вызываемых функций из всей линейки.

     Сейчас программа не может считаться корректной, т.к. не запускалась
     на big-endian машине. Может быть множество сюрпризов. Тем более,
     не все ресурсы переведены из le при чтении.

   * Система координат.
     ПЗ были разработаны с использованием библиотеки DirectX.
     Все данные готовились с учётом требований этой библиотеки.
     DirectX использует левостороннюю систему координат. Следствие отсюда -
     все ресурсы подготовлены для левосторонней системы координат.

     OpenGL использует правостороннюю систему координат. Нужно соответствующим
     образом подготовить данные, считанные из ресурсов, для передачи их
     в OpenGL. В случае трёхмерных векторов достаточно инвертировать
     координату z.
